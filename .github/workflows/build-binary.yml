name: Build Binary


on:
  push:
    branches: [ "main" ]

jobs:

  createrelease:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "MacOS & Windows Build"
          draft: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  buildBinaries:
    name: Build  packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              cargo dev_ui && mkdir -p dist && cp -r target/release/play.app dist/play.app &&
              cd dist && zip -r9 play_mac_x86.zip play.app
            OUT_FILE_NAME: play_mac_x86.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              cargo dev_ui && mkdir -p dist && cp target/release/play.exe dist/play.exe &&
              cp libs/py_tpl/python/build/python310.dll dist/python310.dll &&
              cd dist && powershell Compress-Archive *  play_win.zip
            OUT_FILE_NAME: play_win.zip
            ASSET_MIME: application/zip
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: "-A warnings"
      - name: Build play for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
          asset_name: ${{ matrix.OUT_FILE_NAME}}
          asset_content_type: ${{ matrix.ASSET_MIME}}
  buildDebian:
    name: Build Linux packages
    needs: createrelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          tags: tmp-image
          push: false
      - uses: shrink/actions-docker-extract@v1
        id: extract
        with:
          image: tmp-image
          path: /app/.
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        shell: bash
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Zip files
        id: zip_files
        shell: bash
        run: |
          cd ${{ steps.extract.outputs.destination }} &&
          zip -r9 ../play_linux.zip play &&
          cp play ../play_linux
      - name: Upload Release Asset tar
        id: upload-release-asset-tar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./play_linux.zip
          asset_name: play_linux.zip
          asset_content_type: application/zip
      - name: Upload Release Asset play
        id: upload-release-asset-play
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./play_linux
          asset_name: play_linux
          asset_content_type: application/x-binary
      - name: Trigger Upgrade
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://zhouzhipeng.com/admin/upgrade'
          method: 'GET'
      - name: Send Push
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.day.app/pTyPrycAjp36tGRSAUgfiU/github-action/done'
          method: 'GET'
          contentType: 'application/x-www-form-urlencoded'